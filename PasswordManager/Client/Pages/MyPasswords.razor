@page "/passwords"
@inject IAccountService AccountService
@inject NavigationManager NavigationManager


<h3>Accounts</h3>

<table class="table">
    <thead>
        <tr>
            <th>Login</th>
            <th>Password</th>
            <th>URL</th>
            <th>Comment</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var account in AccountService.Accounts)
        {
            <tr>
                <td>@account.Login</td>
                <td>@account.Password</td>
                <td>@account.URL</td>
                <td>@account.Comment</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowAccount(account.Id))"><i class="oi oi-pencil"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="CreateAccount">Create New Account</button>

@code {
    //protected override async Task OnInitializedAsync()
    //{
    //    await AccountService.GetAccount();
    //}

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            // User is logged in
            await AccountService.GetAccount();
        }
        else
        {
            // User is not logged in
            NavigationManager.NavigateTo("/error401");
        }
    }

    void ShowAccount(int id)
    {
        NavigationManager.NavigateTo($"password/{id}");
    }

    void CreateAccount()
    {
        NavigationManager.NavigateTo("/password");
    }
}
